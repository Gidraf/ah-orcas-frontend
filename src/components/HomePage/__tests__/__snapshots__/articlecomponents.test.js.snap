// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`login snapshot test 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Body
    description={[MockFunction]}
    login={[MockFunction]}
    slug={[MockFunction]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
    time={[MockFunction]}
    title={[MockFunction]}
    userimage={[MockFunction]}
    username={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="card-text"
        >
          <img
            alt=""
            className="img-rounded userimage"
            src={[MockFunction]}
          />
          <div
            className="text"
          >
            <a
              className="small username title"
              href="https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }"
            >
              [MockFunction]
            </a>
            <span
              className="small time"
            >
              [MockFunction]
            </span>
          </div>
          <div
            className="clear"
          />
        </div>,
        <div
          className="article-content"
        >
          <img
            alt=""
            className="card-img-top"
            src="https://picsum.photos/800/200?random"
          />
          <a
            className="title"
            href="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
            onClick={[Function]}
          >
            [MockFunction]
          </a>
          <div
            className="lead"
          >
            <p
              className="text-left"
            >
              [MockFunction]
              <Link
                replace={false}
                to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
              >
                <button
                  className="btn"
                  onClick={[Function]}
                  style={
                    Object {
                      "background": "#009688",
                      "color": "#fff",
                    }
                  }
                  type="button"
                >
                  ReadMore
                </button>
              </Link>
            </p>
          </div>
        </div>,
      ],
      "className": "card slide",
      "style": Object {
        "background": "#FFFFFF",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt=""
              className="img-rounded userimage"
              src={[MockFunction]}
            />,
            <div
              className="text"
            >
              <a
                className="small username title"
                href="https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }"
              >
                [MockFunction]
              </a>
              <span
                className="small time"
              >
                [MockFunction]
              </span>
            </div>,
            <div
              className="clear"
            />,
          ],
          "className": "card-text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "img-rounded userimage",
              "src": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <a
                  className="small username title"
                  href="https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }"
                >
                  [MockFunction]
                </a>,
                <span
                  className="small time"
                >
                  [MockFunction]
                </span>,
              ],
              "className": "text",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": [MockFunction],
                  "className": "small username title",
                  "href": "https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }",
                },
                "ref": null,
                "rendered": [MockFunction],
                "type": "a",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": [MockFunction],
                  "className": "small time",
                },
                "ref": null,
                "rendered": [MockFunction],
                "type": "span",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "clear",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt=""
              className="card-img-top"
              src="https://picsum.photos/800/200?random"
            />,
            <a
              className="title"
              href="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
              onClick={[Function]}
            >
              [MockFunction]
            </a>,
            <div
              className="lead"
            >
              <p
                className="text-left"
              >
                [MockFunction]
                <Link
                  replace={false}
                  to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                >
                  <button
                    className="btn"
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "#009688",
                        "color": "#fff",
                      }
                    }
                    type="button"
                  >
                    ReadMore
                  </button>
                </Link>
              </p>
            </div>,
          ],
          "className": "article-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "className": "card-img-top",
              "src": "https://picsum.photos/800/200?random",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": [MockFunction],
              "className": "title",
              "href": "/article/detail/function() {
        return fn.apply(this, arguments);
      }",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": [MockFunction],
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p
                className="text-left"
              >
                [MockFunction]
                <Link
                  replace={false}
                  to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                >
                  <button
                    className="btn"
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "#009688",
                        "color": "#fff",
                      }
                    }
                    type="button"
                  >
                    ReadMore
                  </button>
                </Link>
              </p>,
              "className": "lead",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  [MockFunction],
                  <Link
                    replace={false}
                    to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                  >
                    <button
                      className="btn"
                      onClick={[Function]}
                      style={
                        Object {
                          "background": "#009688",
                          "color": "#fff",
                        }
                      }
                      type="button"
                    >
                      ReadMore
                    </button>
                  </Link>,
                ],
                "className": "text-left",
              },
              "ref": null,
              "rendered": Array [
                [MockFunction],
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <button
                      className="btn"
                      onClick={[Function]}
                      style={
                        Object {
                          "background": "#009688",
                          "color": "#fff",
                        }
                      }
                      type="button"
                    >
                      ReadMore
                    </button>,
                    "replace": false,
                    "to": "/article/detail/function() {
        return fn.apply(this, arguments);
      }",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "ReadMore",
                      "className": "btn",
                      "onClick": [Function],
                      "style": Object {
                        "background": "#009688",
                        "color": "#fff",
                      },
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": "ReadMore",
                    "type": "button",
                  },
                  "type": [Function],
                },
              ],
              "type": "p",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="card-text"
          >
            <img
              alt=""
              className="img-rounded userimage"
              src={[MockFunction]}
            />
            <div
              className="text"
            >
              <a
                className="small username title"
                href="https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }"
              >
                [MockFunction]
              </a>
              <span
                className="small time"
              >
                [MockFunction]
              </span>
            </div>
            <div
              className="clear"
            />
          </div>,
          <div
            className="article-content"
          >
            <img
              alt=""
              className="card-img-top"
              src="https://picsum.photos/800/200?random"
            />
            <a
              className="title"
              href="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
              onClick={[Function]}
            >
              [MockFunction]
            </a>
            <div
              className="lead"
            >
              <p
                className="text-left"
              >
                [MockFunction]
                <Link
                  replace={false}
                  to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                >
                  <button
                    className="btn"
                    onClick={[Function]}
                    style={
                      Object {
                        "background": "#009688",
                        "color": "#fff",
                      }
                    }
                    type="button"
                  >
                    ReadMore
                  </button>
                </Link>
              </p>
            </div>
          </div>,
        ],
        "className": "card slide",
        "style": Object {
          "background": "#FFFFFF",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt=""
                className="img-rounded userimage"
                src={[MockFunction]}
              />,
              <div
                className="text"
              >
                <a
                  className="small username title"
                  href="https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }"
                >
                  [MockFunction]
                </a>
                <span
                  className="small time"
                >
                  [MockFunction]
                </span>
              </div>,
              <div
                className="clear"
              />,
            ],
            "className": "card-text",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "className": "img-rounded userimage",
                "src": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <a
                    className="small username title"
                    href="https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }"
                  >
                    [MockFunction]
                  </a>,
                  <span
                    className="small time"
                  >
                    [MockFunction]
                  </span>,
                ],
                "className": "text",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": [MockFunction],
                    "className": "small username title",
                    "href": "https://ah-orcas-staging.herokuapp.com/api//profile/function() {
        return fn.apply(this, arguments);
      }",
                  },
                  "ref": null,
                  "rendered": [MockFunction],
                  "type": "a",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": [MockFunction],
                    "className": "small time",
                  },
                  "ref": null,
                  "rendered": [MockFunction],
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "clear",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt=""
                className="card-img-top"
                src="https://picsum.photos/800/200?random"
              />,
              <a
                className="title"
                href="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                onClick={[Function]}
              >
                [MockFunction]
              </a>,
              <div
                className="lead"
              >
                <p
                  className="text-left"
                >
                  [MockFunction]
                  <Link
                    replace={false}
                    to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                  >
                    <button
                      className="btn"
                      onClick={[Function]}
                      style={
                        Object {
                          "background": "#009688",
                          "color": "#fff",
                        }
                      }
                      type="button"
                    >
                      ReadMore
                    </button>
                  </Link>
                </p>
              </div>,
            ],
            "className": "article-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "className": "card-img-top",
                "src": "https://picsum.photos/800/200?random",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": [MockFunction],
                "className": "title",
                "href": "/article/detail/function() {
        return fn.apply(this, arguments);
      }",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": [MockFunction],
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="text-left"
                >
                  [MockFunction]
                  <Link
                    replace={false}
                    to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                  >
                    <button
                      className="btn"
                      onClick={[Function]}
                      style={
                        Object {
                          "background": "#009688",
                          "color": "#fff",
                        }
                      }
                      type="button"
                    >
                      ReadMore
                    </button>
                  </Link>
                </p>,
                "className": "lead",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    [MockFunction],
                    <Link
                      replace={false}
                      to="/article/detail/function() {
        return fn.apply(this, arguments);
      }"
                    >
                      <button
                        className="btn"
                        onClick={[Function]}
                        style={
                          Object {
                            "background": "#009688",
                            "color": "#fff",
                          }
                        }
                        type="button"
                      >
                        ReadMore
                      </button>
                    </Link>,
                  ],
                  "className": "text-left",
                },
                "ref": null,
                "rendered": Array [
                  [MockFunction],
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <button
                        className="btn"
                        onClick={[Function]}
                        style={
                          Object {
                            "background": "#009688",
                            "color": "#fff",
                          }
                        }
                        type="button"
                      >
                        ReadMore
                      </button>,
                      "replace": false,
                      "to": "/article/detail/function() {
        return fn.apply(this, arguments);
      }",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "ReadMore",
                        "className": "btn",
                        "onClick": [Function],
                        "style": Object {
                          "background": "#009688",
                          "color": "#fff",
                        },
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": "ReadMore",
                      "type": "button",
                    },
                    "type": [Function],
                  },
                ],
                "type": "p",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
